{"version":3,"sources":["utils.js","constants.js","components/Loader/Loader.js","components/DropdownFiter/DropdwnFilter.js","components/AgeSelector/AgeSelector.js","components/UserView/UserView.js","components/ListItem/ListItem.js","App.js","index.js"],"names":["parseAge","age","eraIndex","length","number","substr","era","parseFloat","compareAge","a","b","parsedA","parsedB","isTheSameEra","compareCharactersAge","characterA","characterB","birth_year","getExtremeAge","characters","knownAgeCharacters","filter","ch","sort","minAge","maxAge","min","max","fetchAllItems","page","fetch","response","status","json","result","nextPage","next","receivedItems","results","nextItems","allItems","getNamesFromUrls","items","urls","map","u","item","find","sp","url","name","title","ENDPOINT","CHARACTER_FIELDS","speciesNames","filmsNames","starshipsNames","Loader","props","isActive","className","defaultProps","DropdownFilter","label","onChange","e","selectedUrl","target","value","selectedItem","i","onSelected","AgeSelector","eras","useState","setNumber","setEra","defaultValue","type","step","updatedNumber","str","updatedEra","UserView","character","onClose","onClick","xmlns","width","height","fill","viewBox","d","Object","entries","key","valueStr","toString","join","ListItem","isDraggable","onMove","lightMode","classes","onDragEnd","rect","current","getBoundingClientRect","curX","clientX","acceptX","x","draggable","App","urlsByFilms","setUrlsByFilms","urlsBySpecie","setUrlsBySpecie","urlsByAge","setUrlsByAge","extremeAge","setExtremeAge","ageFilter","setAgeFilter","filtered","setFiltered","starShips","setStarShips","setCharacters","species","setSpecies","films","setFilms","favorites","setFavorites","isLoading","setIsLoading","selectedCharacter","setSelectedCharacter","orMode","setOrMode","favoriteSection","useRef","allSection","fetchData","defaultAgeFilter","extreme","useEffect","updated","filteredUrl","isOrMode","specie","temp","el","includes","some","push","values","filterCharacters","Boolean","filterByAge","moveCharacter","renderList","header","emptyText","ref","isLight","starships","undefined","people","id","htmlFor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86dd0145.chunk.js","sourcesContent":["const parseAge = (age) =>{\r\n    let length = age.length;\r\n    let eraIndex = length - 3;\r\n    let number = age.substr(0, eraIndex);\r\n    let era = age.substr(eraIndex);\r\n\r\n    return {\r\n        number: parseFloat(number),\r\n        era\r\n    }\r\n}\r\n\r\n\r\nconst compareAge = (a, b) => {\r\n    const parsedA = parseAge(a);\r\n    const parsedB = parseAge(b)\r\n    const isTheSameEra = parsedB.era===parsedA.era\r\n\r\n    switch (true){\r\n        case !isTheSameEra :\r\n            return parsedA.era === \"BBY\" ? 1 : -1;\r\n        case isTheSameEra && parsedA.era === \"ABY\":\r\n            return parsedB.number - parsedA.number;\r\n        default:\r\n            return parsedA.number - parsedB.number;\r\n    }\r\n}\r\n\r\nconst compareCharactersAge = (characterA, characterB) => {\r\n    return compareAge(characterA.birth_year, characterB.birth_year);\r\n}\r\n\r\nconst getExtremeAge = (characters) => {\r\n    let knownAgeCharacters = characters.filter(ch => ch.birth_year !== \"unknown\");\r\n    knownAgeCharacters.sort(compareCharactersAge);\r\n    const minAge = knownAgeCharacters[0];\r\n    const maxAge = knownAgeCharacters[knownAgeCharacters.length-1]\r\n\r\n    const min = parseAge(minAge.birth_year);\r\n    const max = parseAge(maxAge.birth_year)\r\n\r\n    return { min, max }\r\n}\r\n\r\nconst fetchAllItems = async (page) => {\r\n    let response = await fetch(page);\r\n    if(response.status!==200)\r\n        return [];\r\n\r\n    let result = await response.json();\r\n    let nextPage = result.next;\r\n    let receivedItems = result.results;\r\n\r\n    let allItems ;\r\n    if(nextPage) {\r\n        let nextItems = await fetchAllItems(nextPage);\r\n        allItems = [...receivedItems, ...nextItems];\r\n    } else\r\n        allItems = receivedItems\r\n\r\n    return allItems;\r\n}\r\n\r\nconst filterCharacters = (characters, filteredUrl, isOrMode) => {\r\n    if(isOrMode){\r\n        if(!filteredUrl.age && !filteredUrl.films && !filteredUrl.specie)\r\n            return characters\r\n\r\n        let result = [];\r\n        for (const value of Object.values(filteredUrl)) {\r\n            if(value) {\r\n\r\n                let temp = [...result]\r\n                characters.map(el => {\r\n                    let url = el.url;\r\n                    if (value.includes(url) && !temp.some(ch => ch.url === url))\r\n                        temp.push(el);\r\n                })\r\n\r\n                result = [...temp];\r\n            }\r\n        }\r\n        return result;\r\n    } else {\r\n        let result = [...characters];\r\n        for (const value of Object.values(filteredUrl)) {\r\n            if(value) {\r\n                let temp = result.filter(el => value.includes(el.url));\r\n                result = [...temp];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nconst filterByAge = (characters, {min, max}) =>{\r\n    if(!min && !max)\r\n        return;\r\n\r\n    let filteredUsers =  characters.filter(ch => {\r\n        switch (true) {\r\n            case (ch.birth_year === \"unknown\" && (min || max)):\r\n                return false;\r\n            case Boolean(min && max) :\r\n                return compareAge(ch.birth_year, min) >= 0 && compareAge(ch.birth_year, max) <= 0\r\n            case Boolean(min):\r\n                return compareAge(ch.birth_year, min) >= 0\r\n            case Boolean(max):\r\n                return compareAge(ch.birth_year, max) <= 0\r\n            default:\r\n                return true\r\n        }\r\n    })\r\n\r\n    return filteredUsers.map(el => el.url);\r\n}\r\n\r\nconst getNamesFromUrls = (items = [], urls = []) => {\r\n    return urls.map(u => {\r\n        let item = items.find(sp=>sp.url === u);\r\n        if(item)\r\n            return item.name || item.title\r\n    })\r\n}\r\n\r\nexport {fetchAllItems, compareCharactersAge, getExtremeAge, filterCharacters, filterByAge, getNamesFromUrls}","export const ENDPOINT = {\r\n    PEOPLE: \"https://swapi.dev/api/people/\",\r\n    FILMS: \"https://swapi.dev/api/films/\",\r\n    SPECIES: \"https://swapi.dev/api/species/\",\r\n    STARSHIPS: \"https://swapi.dev/api/starships\"\r\n}\r\n\r\n\r\nexport const CHARACTER_FIELDS = {\r\n    name: \"Name\",\r\n    birth_year: \"Birth Year\",\r\n    speciesNames: \"Species\",\r\n    filmsNames: \"Movies\",\r\n    starshipsNames: \"Spaceships\",\r\n}","import propTypes from \"prop-types\";\r\nimport \"./Loader.css\"\r\n\r\nconst Loader = (props) => {\r\n    const isActive = props.isActive;\r\n    if(!isActive)\r\n        return <></>;\r\n\r\n    return <div className={\"modal-background\"}>\r\n            <div className=\"lds-default\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n            <div className={\"loader-text\"}>Loading...</div>\r\n    </div>\r\n}\r\n\r\nLoader.defaultProps = {\r\n    isActive: false\r\n}\r\n\r\nLoader.propTypes = {\r\n    isActive: propTypes.bool\r\n}\r\n\r\nexport default Loader;","import propTypes from \"prop-types\";\r\n\r\nconst DropdownFilter = (props) => {\r\n    const { label, items, onChange} = props;\r\n\r\n    const onSelect = (e) => {\r\n        let selectedUrl = e.target.value;\r\n        let selectedItem = items.filter( ({url}) => url===selectedUrl)[0];\r\n        return onChange(selectedItem);\r\n    }\r\n\r\n    return <div className={\"filter-row\"}>\r\n        {label && <span ><b>{label}</b></span>}\r\n        <select className={\"inputStyle\"} onChange={onSelect}>\r\n            <option value> </option>\r\n            {items.map( ({title, name, url}, i) => {\r\n                const label = title ? title : name;\r\n                 return <option value={url} key={`i${url}`}>{label}</option>\r\n            })}\r\n        </select>\r\n    </div>\r\n}\r\n\r\nDropdownFilter.defaultProps = {\r\n    items: [],\r\n    onSelected: () => void 0\r\n}\r\n\r\nDropdownFilter.propTypes = {\r\n    label: propTypes.string,\r\n    items: propTypes.arrayOf(propTypes.shape({\r\n        url: propTypes.string,\r\n        name: propTypes.string,\r\n        title: propTypes.string\r\n    })),\r\n    onChange: propTypes.func,\r\n}\r\n\r\nexport default DropdownFilter;","import propTypes from \"prop-types\";\r\nimport {useState} from \"react\";\r\n\r\nconst AgeSelector = (props) => {\r\n    const eras = [\"BBY\", \"ABY\"]\r\n    const [number, setNumber] = useState();\r\n    const [era, setEra] = useState(eras[0])\r\n\r\n    const { label, min, max, onSelected, defaultValue} = props;\r\n\r\n    const onEraChange = (e) => {\r\n        let updatedEra = e.target.value\r\n        setEra(updatedEra)\r\n        if(number)\r\n            onSelected({\r\n                era: updatedEra,\r\n                number,\r\n                str: `${number}${updatedEra}`\r\n            })\r\n    }\r\n\r\n    const onNumberChange = (e) => {\r\n        let updatedNumber = e.target.value;\r\n        setNumber(updatedNumber);\r\n        onSelected({\r\n            era,\r\n            number: updatedNumber,\r\n            str: `${updatedNumber}${era}`\r\n        })\r\n    }\r\n\r\n    return <div className={\"age-filter\"}>\r\n        {label && <span>{label}</span>}\r\n        <input type=\"number\" min={min} max={max} step=\"0.1\" className={\"inputStyle\"}\r\n               onChange={onNumberChange}/>\r\n        <select onChange={onEraChange} className={\"inputStyle\"} defaultValue={\"BBY\"}>\r\n            {eras.map(e => <option value={e} key={`${label}${e}`}>{e}</option>)}\r\n        </select>\r\n    </div>\r\n}\r\n\r\nAgeSelector.defaultProps = {\r\n    onSelected: () => void 0,\r\n    defaultValue: \"BBY\"\r\n\r\n}\r\n\r\nAgeSelector.propTypes = {\r\n    min: propTypes.number,\r\n    max: propTypes.number,\r\n    onSelected: propTypes.func,\r\n    label: propTypes.string,\r\n    defaultValue: propTypes.oneOf([\"BBY\", \"ABY\"])\r\n}\r\n\r\nexport default AgeSelector;","import propTypes from \"prop-types\";\r\nimport {CHARACTER_FIELDS} from \"../../constants\";\r\nimport './UserView.css';\r\n\r\nconst UserView = (props) => {\r\n\r\n    const {character, onClose} = props ;\r\n    if(!character)\r\n        return <></>;\r\n\r\n    const renderLabelValue = ([key, value]) => {\r\n        let valueStr = character[key].toString();\r\n        if(typeof valueStr !== 'string')\r\n            valueStr = valueStr.join(', ');\r\n\r\n        if(valueStr && valueStr.length)\r\n            return <p><b>{`${value}: `}</b>{valueStr}</p>\r\n    }\r\n\r\n    return <div className=\"modal-background\">\r\n        <div className={\"modal-content\"}>\r\n            <button className={\"close-button\"} onClick={onClose}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\r\n                     className=\"bi bi-x-lg\" viewBox=\"0 0 16 16\">\r\n                    <path\r\n                        d=\"M1.293 1.293a1 1 0 0 1 1.414 0L8 6.586l5.293-5.293a1 1 0 1 1 1.414 1.414L9.414 8l5.293 5.293a1 1 0 0 1-1.414 1.414L8 9.414l-5.293 5.293a1 1 0 0 1-1.414-1.414L6.586 8 1.293 2.707a1 1 0 0 1 0-1.414z\"/>\r\n                </svg>\r\n            </button>\r\n            {Object.entries(CHARACTER_FIELDS).map(renderLabelValue)}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nUserView.propTypes = {\r\n    character: propTypes.object,\r\n    onClose: propTypes.func\r\n}\r\n\r\nexport default UserView;","import propTypes from \"prop-types\";\r\nimport \"./ListItem.css\"\r\n\r\nconst ListItem = (props) => {\r\n\r\n    const {isDraggable, onClick, character, target, onMove, lightMode} = props ;\r\n\r\n    const onDrop = (e) =>{\r\n        const rect = target.current.getBoundingClientRect();\r\n        const curX = e.clientX\r\n        const acceptX ={\r\n            from: rect.x,\r\n            to: rect.x+rect.width\r\n        }\r\n\r\n        if(curX<acceptX.to && curX>acceptX.from)\r\n            onMove(character);\r\n\r\n    }\r\n\r\n    const classes = `list-element ${lightMode ? \"light\" : \"\"}`;\r\n    return <div className={classes}\r\n                onDragEnd={onDrop}\r\n                draggable={isDraggable}\r\n                onClick={onClick}\r\n    >{character.name}</div>\r\n}\r\n\r\nListItem.defaultProps ={\r\n    onClose: () => void 0,\r\n    onClick: () => void 0,\r\n    onMove: () => void 0\r\n}\r\n\r\nListItem.propTypes = {\r\n    isDraggable:propTypes.bool,\r\n    onClick: propTypes.func,\r\n    character: propTypes.object,\r\n    target: propTypes.any,\r\n    onMove: propTypes.func,\r\n    lightMode: propTypes.bool\r\n}\r\n\r\nexport default ListItem;","import './App.css';\r\nimport {useEffect, useRef, useState} from \"react\";\r\nimport {\r\n    fetchAllItems,\r\n    filterByAge,\r\n    filterCharacters,\r\n    getExtremeAge,\r\n    getNamesFromUrls\r\n} from \"./utils\";\r\nimport {ENDPOINT} from \"./constants\";\r\nimport Loader from \"./components/Loader/Loader\";\r\nimport DropdownFilter from \"./components/DropdownFiter/DropdwnFilter\";\r\nimport AgeSelector from \"./components/AgeSelector/AgeSelector\";\r\nimport UserView from \"./components/UserView/UserView\";\r\nimport ListItem from \"./components/ListItem/ListItem\";\r\n\r\nconst App = () => {\r\n\r\n    const [urlsByFilms, setUrlsByFilms] = useState();\r\n    const [urlsBySpecie, setUrlsBySpecie] = useState();\r\n    const [urlsByAge, setUrlsByAge] = useState();\r\n\r\n    const [extremeAge, setExtremeAge] = useState();\r\n    const [ageFilter, setAgeFilter] = useState({min: {}, max:{}})\r\n    const [filtered, setFiltered] = useState([])\r\n\r\n    const [starShips, setStarShips] = useState([]);\r\n    const [characters, setCharacters] = useState([]);\r\n    const [species, setSpecies] = useState([]);\r\n    const [films, setFilms] = useState([]);\r\n\r\n    const [favorites, setFavorites] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [selectedCharacter, setSelectedCharacter] = useState();\r\n    const [orMode, setOrMode] = useState(false);\r\n\r\n    const favoriteSection = useRef(null);\r\n    const allSection = useRef(null);\r\n    const fetchData = async () => {\r\n        setIsLoading(true);\r\n        let starShips = await  fetchAllItems(ENDPOINT.STARSHIPS);\r\n        let characters = await fetchAllItems(ENDPOINT.PEOPLE);\r\n        let species = await fetchAllItems(ENDPOINT.SPECIES);\r\n        let films = await fetchAllItems(ENDPOINT.FILMS);\r\n        setIsLoading(false);\r\n\r\n        let defaultAgeFilter = getExtremeAge(characters);\r\n        let extreme = defaultAgeFilter.min.number > defaultAgeFilter.max.number\r\n            ? defaultAgeFilter.min.number : defaultAgeFilter.max.number;\r\n        setExtremeAge(extreme);\r\n\r\n        setFilms(films);\r\n        setSpecies(species);\r\n        setCharacters(characters);\r\n        setStarShips(starShips);\r\n\r\n    }\r\n\r\n    useEffect( () => {\r\n       fetchData();\r\n    }, [])\r\n\r\n    const characterSelected = (character) => {\r\n       setSelectedCharacter({\r\n           ...character,\r\n           speciesNames: getNamesFromUrls(species, character.species),\r\n           filmsNames: getNamesFromUrls(films, character.films),\r\n           starshipsNames: getNamesFromUrls(starShips, character.starships),\r\n       })\r\n    }\r\n\r\n      useEffect(() => {\r\n          if(urlsBySpecie || urlsByFilms || urlsByAge) {\r\n              let updated = filterCharacters(characters,\r\n                  {\r\n                      films: urlsByFilms,\r\n                      specie: urlsBySpecie,\r\n                      age: urlsByAge\r\n                  }, orMode);\r\n              setFiltered(updated)\r\n          } else\r\n              setFiltered(characters);\r\n      }, [characters, urlsBySpecie, urlsByFilms, urlsByAge, orMode])\r\n\r\n    useEffect(() => {\r\n        let urls = filterByAge(characters,\r\n            {\r\n                min: ageFilter.min.number && ageFilter.min.str,\r\n                max: ageFilter.max.number && ageFilter.max.str\r\n            });\r\n        setUrlsByAge(urls)\r\n    }, [characters, ageFilter])\r\n\r\n    const moveCharacter = (character) => {\r\n        setFavorites((favorites.some(ch=> ch.url === character.url))\r\n            ? favorites.filter(ch => ch.url !== character.url)\r\n            : [...favorites, character]\r\n        )\r\n    }\r\n\r\n    const renderList = (items, header, emptyText, target, classes, ref, isLight) =>{\r\n        return  <div\r\n            ref={ref}\r\n            className={classes}>\r\n            <h2 className={\"section-name\"}>{header}</h2>\r\n            { items && items.length\r\n                ? items.map(\r\n                    ch =><ListItem\r\n                        onClick={e => characterSelected(ch)}\r\n                        character={ch}\r\n                        isDraggable={true}\r\n                        target={target}\r\n                        onMove={moveCharacter}\r\n                        lightMode={isLight}\r\n                        key={ch.url}\r\n                    />)\r\n                : <h4>{emptyText}</h4>\r\n            }\r\n        </div>\r\n    }\r\n  return (\r\n    <div className={\"container\"}>\r\n        <Loader isActive={isLoading}/>\r\n        <UserView character={selectedCharacter} onClose={e => setSelectedCharacter(undefined)}/>\r\n        <div className={\"main-section\"}>\r\n        <div className={\"section filter-section\"}>\r\n            <div className={\"dropdown-section\"}>\r\n                <DropdownFilter label={\"Film: \"} items={films}\r\n                                onChange={ urls => setUrlsByFilms(urls && urls.characters)}/>\r\n                <DropdownFilter label={\"Specie: \"} items={species}\r\n                                onChange={urls => setUrlsBySpecie(urls && urls.people)}/>\r\n            </div>\r\n            <div className={\"filter-row\"}>\r\n                <span className={\"filter-name \"}><b>Age:</b></span>\r\n                <div>\r\n                    <AgeSelector label={\"from: \"} min={0.1} max={extremeAge}\r\n                                 defaultValue={\"BBY\"} onSelected={age => setAgeFilter({...ageFilter, max: age})}/>\r\n                    <AgeSelector label={\"to: \"} min={0.1} max={extremeAge}\r\n                                 defaultValue={\"ABY\"} onSelected={age => setAgeFilter({...ageFilter, min: age})}/>\r\n                </div>\r\n            </div>\r\n            <div className={\"mode\"}>\r\n                <input type=\"checkbox\" id=\"isOrMode\" name=\"isOrMode\" onChange={() => setOrMode(!orMode)}/>\r\n                    <label htmlFor=\"isOrMode\">Or Mode</label>\r\n            </div>\r\n        </div>\r\n            {renderList(filtered, \"Characters\", \"No characters\",\r\n                favoriteSection,  \"all-section section\", allSection)}\r\n        </div>\r\n        {renderList(favorites, \"Favorites\", \"No favorites\",\r\n            allSection,  \"favorite-section section\", favoriteSection, true)}\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}